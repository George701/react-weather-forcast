{"version":3,"sources":["components/layout/loader.gif","reducers/weatherReducer.js","reducers/index.js","actions/types.js","store.js","components/layout/CurrentUnit.js","components/layout/FutureUnits.js","components/layout/Content.js","components/layout/Loader.js","components/geo/GetLocal.js","actions/weatherActions.js","components/geo/GetGeo.js","components/Index.js","components/city/GetCity.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","initialState","c_data","l_data","combineReducers","weather","state","arguments","length","undefined","action","type","Object","objectSpread","payload","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","window","__REDUX_DEVTOOLS_EXTENSION__","CurrentUnit","units","this","props","data","dt","dt_txt","date","String","substring","indexOf","time","main","temperature","parseInt","temp","react_default","a","createElement","className","dnIcon","map","weather_item","now_date","Date","d","month","getMonth","day","getDate","year","getFullYear","join","formatDate","key","getDayTime","Component","FutureUnits","dist_default","format","Content","string","degrees","unit","d_unit","getDegreesUnit","description","charAt","toUpperCase","slice","layout_CurrentUnit","layout_FutureUnits","Loader","Fragment","src","loader","alt","GetLocal","units_state","onChangeUnits","_this","setState","lat","lon","getUnits","getGeo","prevProps","prevState","list","react_router_dom","to","city","name","id","defaultChecked","onChange","htmlFor","layout_Content","bool","connect","latitude","longtitude","_ref","asyncToGenerator","regenerator_default","mark","_callee","dispatch","details","res","wrap","_context","prev","next","axios","get","concat","sent","stop","_x","GetGeo","isGeolocationAvailable","isGeolocationEnabled","coords","parseFloat","longitude","geo_GetLocal","geolocated","positionOptions","enableHighAccuracy","userDecisionTimeout","Index","redirect","city_redirect","setRedirect","renderRedirect","react_router","_this2","handleKeyEnter","e","document","getElementById","value","redirect_city","checkAndGetCountryCode","alert","onClick","placeholder","onKeyPress","city_array","city_countryCode","city_and_code","console","log","selectCity","city_list","i","focus","GetCity","location","match","params","getCity","getCityName","_ref2","_callee2","_context2","_x2","App","es","exact","path","component","Boolean","hostname","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e4d944d3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loader.866cb20b.gif\";","import { GET_BY_GEO } from \"../actions/types\";\r\nimport { GET_BY_CITY } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    c_data:[],\r\n    l_data:[],\r\n};\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_BY_GEO:\r\n            return{\r\n                ...state,\r\n                l_data: action.payload\r\n            };\r\n        case GET_BY_CITY:\r\n            return{\r\n                ...state,\r\n                c_data: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport weatherReducer from './weatherReducer';\r\n\r\nexport default combineReducers({\r\n    weather:  weatherReducer, // important name\r\n});","export const GET_BY_GEO = 'GET_BY_GEO';\r\nexport const GET_BY_CITY = 'GET_BY_CITY';\r\nexport const GET_LOCATION = 'GET_LOCATION';","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(rootReducer, initialState, compose(applyMiddleware(...middleware), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n));\r\n\r\nexport default store;","import React, { Component } from 'react';\r\nimport Moment from 'react-moment';\r\n\r\nclass CurrentUnit extends Component {\r\n    render(){\r\n        const units = this.props.units;\r\n        const data = this.props.data;\r\n        if (data) {\r\n            let dt = data[0].dt_txt;\r\n            let date = String(dt.substring(0, dt.indexOf(\" \")));\r\n            let time = String(dt.substring(dt.indexOf(\" \") + 1, dt.length));\r\n            // let now_date = new Date();\r\n            // now_date = String(formatDate(now_date));\r\n            let weather = data[0].weather[0].main;\r\n            let temperature = parseInt(data[0].main.temp);\r\n            // if (date === now_date) {\r\n                return (\r\n                    <div className=\"current-unit\">\r\n                        <div className=\"current-weather\">\r\n                            <div className=\"current-weather-handler\">\r\n                                <span className=\"c-weather-unit\">\r\n                                    <span className=\"c-weather-unit-handler\">\r\n                                        <span>{temperature}</span>\r\n                                        <span>{units}</span>\r\n                                    </span>\r\n                                </span>\r\n                                <span className=\"c-weather-unit\">\r\n                                    <span className=\"c-weather-unit-handler\">\r\n                                        {dnIcon(time, weather)}\r\n                                    </span>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"today-weather\">\r\n                            {data.map(weather_item =>{\r\n                                dt = weather_item.dt_txt;\r\n                                date = String(dt.substring(0, dt.indexOf(\" \")));\r\n                                let now_date = new Date();\r\n                                now_date = String(formatDate(now_date));\r\n                                time = String(dt.substring(dt.indexOf(\" \") + 1, dt.length));\r\n                                if (date === now_date) {\r\n                                    if(time === \"03:00:00\" || time === \"09:00:00\" || time === \"15:00:00\" || time === \"21:00:00\"){\r\n                                        return(\r\n                                            <div className=\"weather-item\" key={weather_item.dt}>\r\n                                                <div className=\"weather-item-handler\">\r\n                                                    <span>{getDayTime(time)} </span>\r\n                                                    <span>{parseInt(weather_item.main.temp)}{units}</span>\r\n                                                </div>\r\n                                                <div className=\"weather-item-handler\"></div>\r\n                                            </div>\r\n                                        )\r\n                                    }\r\n                                }\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                )\r\n            // }\r\n        }\r\n    }\r\n}\r\n\r\nfunction formatDate(date) {\r\n    let d = new Date(date),\r\n        month = '' + (d.getMonth() + 1),\r\n        day = '' + d.getDate(),\r\n        year = d.getFullYear();\r\n\r\n    if (month.length < 2) month = '0' + month;\r\n    if (day.length < 2) day = '0' + day;\r\n\r\n    return [year, month, day].join('-');\r\n}\r\n\r\nfunction dnIcon(time, weather){\r\n    if (time === '09:00:00' || time === '12:00:00' || time === '15:00:00' || time === '18:00:00'){\r\n        if(weather === 'Clouds'){\r\n            return <i className=\"fas fa-cloud-sun sun\"/>;\r\n        }else if(weather === 'Rain'){\r\n            return <i className=\"fas fa-cloud-sun-rain sun\"/>;\r\n        }else{\r\n            return <i className=\"fas fa-sun sun\"/>;\r\n        }\r\n\r\n    }else{\r\n        if(weather === 'Clouds'){\r\n            return <i className=\"fas fa-cloud-moon moon\"/>;\r\n        }else if(weather === 'Rain'){\r\n            return <i className=\"fas fa-cloud-moon-rain moon\"/>;\r\n        }else{\r\n            return <i className=\"fas fa-moon moon\"/>;\r\n        }\r\n    }\r\n}\r\n\r\nfunction getDayTime(time){\r\n    switch(time){\r\n        case \"00:00:00\":\r\n            return \"Night\";\r\n        case \"03:00:00\":\r\n            return \"Night\";\r\n        case \"06:00:00\":\r\n            return \"Morning\";\r\n        case \"09:00:00\":\r\n            return \"Morning\";\r\n        case \"12:00:00\":\r\n            return \"Day\";\r\n        case \"15:00:00\":\r\n            return \"Day\";\r\n        case \"18:00:00\":\r\n            return \"Evening\";\r\n        case \"21:00:00\":\r\n            return \"Evening\";\r\n    }\r\n}\r\n\r\n\r\nexport default CurrentUnit;","import React, { Component } from 'react';\r\nimport Moment from 'react-moment';\r\n\r\nclass FutureUnits extends Component {\r\n    render(){\r\n        const units = this.props.units;\r\n        const data = this.props.data;\r\n        let dt, date, now_date, time, weather;\r\n        return(\r\n            <div className=\"future-units\">\r\n                {data.map(weather_item =>{\r\n                    dt = weather_item.dt_txt;\r\n                    date = String(dt.substring(0, dt.indexOf(\" \")));\r\n                    now_date = new Date();\r\n                    now_date = String(formatDate(now_date));\r\n                    weather = weather_item.weather[0].main;\r\n                    time = String(dt.substring(dt.indexOf(\" \") + 1, dt.length));\r\n                    if(time === \"12:00:00\"){\r\n                        return(\r\n                            <div className=\"future-item\" key={weather_item.dt}>\r\n                                <div className=\"future-item-day\">\r\n                                    <Moment  format={'dddd'}>\r\n                                        {dt}\r\n                                    </Moment>\r\n                                </div>\r\n                                <div className=\"future-item-weather\">\r\n                                    {dnIcon(time, weather)}\r\n                                </div>\r\n                                <div className=\"future-item-temperature\">\r\n                                    {parseInt(weather_item.main.temp)}{units}\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction formatDate(date) {\r\n    let d = new Date(date),\r\n        month = '' + (d.getMonth() + 1),\r\n        day = '' + d.getDate(),\r\n        year = d.getFullYear();\r\n\r\n    if (month.length < 2) month = '0' + month;\r\n    if (day.length < 2) day = '0' + day;\r\n\r\n    return [year, month, day].join('-');\r\n}\r\n\r\nfunction dnIcon(time, weather){\r\n    if (time === '09:00:00' || time === '12:00:00' || time === '15:00:00' || time === '18:00:00'){\r\n        if(weather === 'Clouds'){\r\n            return <i className=\"fas fa-cloud-sun sun\"/>;\r\n        }else if(weather === 'Rain'){\r\n            return <i className=\"fas fa-cloud-sun-rain sun\"/>;\r\n        }else{\r\n            return <i className=\"fas fa-sun sun\"/>;\r\n        }\r\n\r\n    }else{\r\n        if(weather === 'Clouds'){\r\n            return <i className=\"fas fa-cloud-moon moon\"/>;\r\n        }else if(weather === 'Rain'){\r\n            return <i className=\"fas fa-cloud-moon-rain moon\"/>;\r\n        }else{\r\n            return <i className=\"fas fa-moon moon\"/>;\r\n        }\r\n    }\r\n}\r\n\r\nexport default FutureUnits;","import React, { Component } from 'react';\r\nimport Moment from 'react-moment';\r\n\r\nimport CurrentUnit from \"./CurrentUnit\";\r\nimport FutureUnits from \"./FutureUnits\";\r\n\r\nclass Content extends Component {\r\n    render(){\r\n        const units = this.props.units;\r\n        const data = this.props.data;\r\n        // console.log(units);\r\n        const degrees = getDegreesUnit(units);\r\n        return(\r\n            <div className=\"weather-unit\">\r\n                <h1 className=\"current-data time-header\">\r\n                    <Moment  format={'dddd, MMMM Do YYYY'} className=\"\">\r\n                        {data[0].dt_txt}\r\n                    </Moment>\r\n                </h1>\r\n                <h2 className=\"current-data weather-description\">{capitalizeFirstLetter(data[0].weather[0].description)}</h2>\r\n                <div className=\"weather-container\">\r\n                    <CurrentUnit\r\n                        units={degrees}\r\n                        data={data}\r\n                    />\r\n                    <FutureUnits\r\n                        units={degrees}\r\n                        data={data}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction capitalizeFirstLetter(string) {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n\r\nfunction getDegreesUnit(unit){\r\n    let d_unit = '';\r\n\r\n    if(unit === 'metric'){\r\n        d_unit = \"°C\";\r\n    }else{\r\n        d_unit = \"°F\";\r\n    }\r\n\r\n    return d_unit;\r\n}\r\n\r\nexport default Content;\r\n","import React from 'react';\r\nimport loader from './loader.gif';\r\n\r\nexport default () => {\r\n    return(\r\n        <React.Fragment>\r\n            <img src={loader} alt=\"Loading...\" className=\"loader\"/>\r\n        </React.Fragment>\r\n    )\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {getGeo} from '../../actions/weatherActions';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Content from '../layout/Content';\r\nimport Loader from '../layout/Loader';\r\n\r\n\r\nclass GetLocal extends Component {\r\n    state = {\r\n        units_state: true,\r\n    };\r\n\r\n    onChangeUnits = () => {\r\n        // console.log(\"clicked: \"+!this.state.units_state);\r\n        this.setState({units_state: !this.state.units_state})\r\n    };\r\n\r\n    componentDidMount(){\r\n        const lat = this.props.lat;\r\n        const lon = this.props.lon;\r\n        let units = getUnits(this.state.units_state);\r\n\r\n        this.props.getGeo(lat,lon, units);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState){\r\n        if(prevState.units_state !== this.state.units_state){\r\n            let units = getUnits(this.state.units_state);\r\n\r\n            const lat = this.props.lat;\r\n            const lon = this.props.lon;\r\n\r\n            this.props.getGeo(lat,lon, units);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const list = this.props.l_data.list;\r\n\r\n        if(list){\r\n            // this.setState({location: city});\r\n            return(\r\n                <div  className=\"main-container\">\r\n                    <div className=\"main-header\">\r\n                        <h1>\r\n                            <Link to=\"/\" className=\"back-route\">\r\n                                <i className=\"fas fa-arrow-left\"/>\r\n                                {\" \"}\r\n                            </Link>\r\n                            <span>\r\n                                {this.props.l_data.city.name}\r\n                            </span>\r\n                        </h1>\r\n\r\n                        <div className=\"onoffswitch wrapper-ios\">\r\n                            <input type=\"checkbox\" name=\"onoffswitch\" className=\"onoffswitch-checkbox\"\r\n                                   id=\"myonoffswitch\" defaultChecked={this.state.units_state} onChange={this.onChangeUnits} />\r\n                            <label className=\"onoffswitch-label\" htmlFor=\"myonoffswitch\">\r\n                                <span className=\"onoffswitch-inner\"></span>\r\n                                <span className=\"onoffswitch-switch\"></span>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n\r\n                <Content\r\n                    units = {getUnits(this.state.units_state)}\r\n                    data = {list}\r\n                />\r\n            </div>\r\n            )\r\n        }else{\r\n            return <Loader/>\r\n        }\r\n    }\r\n}\r\n\r\nfunction getUnits(bool){\r\n    if(bool){\r\n        return \"metric\"\r\n    }else{\r\n        return \"imperial\";\r\n    }\r\n}\r\n\r\nGetLocal.propTypes = {\r\n    // l_data: PropTypes.array.isRequired,\r\n    getGeo: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect((state) => {return {l_data: state.weather.l_data,}},{getGeo})(GetLocal);","import {GET_BY_GEO, GET_BY_CITY} from './types';\r\nimport axios from 'axios';\r\n\r\nexport const getGeo = (latitude, longtitude, units) => async dispatch => {\r\n    const lat = latitude;\r\n    const lon = longtitude;\r\n    const details = units;\r\n    // const details = \"imperial\";\r\n\r\n    const APPID = \"8fe3c472a676c5b382b004b1bfcaec99\"; // main\r\n    // const APPID = \"7fb36ae655695a79730ae5642c831cae\";\r\n\r\n\r\n    const res = await axios.get(`https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&units=${details}&APPID=${APPID}`);\r\n    dispatch({\r\n        type: GET_BY_GEO,\r\n        payload: res.data\r\n    })\r\n};\r\n\r\nexport const getCity = (location, units) => async dispatch => {\r\n\r\n    // const city = \"London,uk\";\r\n    const city = location;\r\n    const details = units;\r\n\r\n    // console.log();\r\n\r\n    const APPID = \"8fe3c472a676c5b382b004b1bfcaec99\";\r\n    // const APPID = \"7fb36ae655695a79730ae5642c831cae\";\r\n\r\n    const res = await axios.get(`https://api.openweathermap.org/data/2.5/forecast?q=${city}&units=${details}&APPID=${APPID}`);\r\n    dispatch({\r\n        type: GET_BY_CITY,\r\n        payload: res.data\r\n    })\r\n};\r\n","import React, { Component } from 'react';\r\nimport {geolocated} from 'react-geolocated';\r\n\r\nimport GetLocal from './GetLocal';\r\n\r\nimport Loader from '../layout/Loader';\r\n\r\nclass GetGeo extends Component {\r\n    // state={\r\n    //     units: \"metric\"\r\n    // };\r\n\r\n    // onChange = e => this.setState({units: e.target.value});\r\n\r\n    render() {\r\n        if(!this.props.isGeolocationAvailable){\r\n            return <div>Your browser does not support Geolocation</div>\r\n        }else{\r\n            if(!this.props.isGeolocationEnabled){\r\n                return <div>Geolocation is not enabled</div>\r\n            }else {\r\n                if (this.props.coords) {\r\n                    const lat = parseFloat(this.props.coords.latitude);\r\n                    const lon = parseFloat(this.props.coords.longitude);\r\n                    return (\r\n                        <GetLocal\r\n                            lat={lat}\r\n                            lon={lon}\r\n                        />\r\n                    )\r\n                } else {\r\n                    return <Loader/>;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default geolocated({\r\n    positionOptions: {\r\n        enableHighAccuracy: false,\r\n    },\r\n    userDecisionTimeout: 5000,\r\n})(GetGeo);\r\n","import React, { Component } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\nclass Index extends Component {\r\n    state = {\r\n        redirect: false,\r\n        city_redirect: \"\"\r\n    };\r\n\r\n    setRedirect = () => {\r\n        this.setState({\r\n            redirect: true\r\n        })\r\n    };\r\n\r\n    renderRedirect = () => {\r\n        if (this.state.redirect) {\r\n            return <Redirect to={`/city/${this.state.city_redirect}`} />\r\n        }\r\n    };\r\n\r\n\r\n    render() {\r\n\r\n        this.handleKeyEnter = (e) => {\r\n            if(e.key === 'Enter'){\r\n                let city = document.getElementById('city').value;\r\n                if(city !== \"\"){\r\n                    let redirect_city = checkAndGetCountryCode(city);\r\n                    if (redirect_city !== false){\r\n                        // console.log(redirect_city);\r\n                        this.setState({city_redirect: redirect_city});\r\n                        this.setRedirect();\r\n                    }\r\n                }else{\r\n                    alert(\"You didn't select any city! Please type the name of the city\");\r\n                }\r\n            }\r\n        };\r\n\r\n        this.onClick = () => {\r\n            let city = document.getElementById('city').value;\r\n            if(city !== \"\"){\r\n                let redirect_city = checkAndGetCountryCode(city);\r\n                if (redirect_city !== false){\r\n                    // console.log(redirect_city);\r\n                    this.setState({city_redirect: redirect_city});\r\n                    this.setRedirect();\r\n                }\r\n            }else{\r\n                alert(\"You didn't select any city! Please type the name of the city\");\r\n            }\r\n        };\r\n\r\n        // console.log(this.state.city_redirect);\r\n        return (\r\n            <div className=\"index-container\">\r\n                <div className=\"index-content\">\r\n                    <div className=\"index-row\">\r\n                        <input type=\"text\" name=\"city_name\" id=\"city\" placeholder=\"City\" onKeyPress={this.handleKeyEnter}/>\r\n                        <button id=\"city-search\" onClick={this.onClick}>\r\n                            {this.renderRedirect()}\r\n                            <i className=\"fas fa-search\"/>\r\n                        </button>\r\n                    </div>\r\n\r\n                    <div className=\"index-row\">or</div>\r\n\r\n                    <div className=\"index-row\">use my{' '}\r\n                        <Link to=\"/geo\" className=\"geo-position\">\r\n                            current position\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst city_array = [\r\n    \"London\"\r\n];\r\n\r\nconst city_countryCode = [\r\n    \"uk\"\r\n];\r\n\r\nfunction selectCity(city){\r\n    city = String(city);\r\n    console.log(city);\r\n    switch(city){\r\n        case city_array[0]:\r\n            city = String(city_array[0]+\",\"+city_countryCode[0]);\r\n            break;\r\n        default:\r\n            city = \"Undefined\";\r\n    }\r\n    return city;\r\n}\r\n\r\nfunction checkAndGetCountryCode(city){\r\n    let city_and_code = selectCity(city);\r\n    // console.log(city_and_code);\r\n    if(city_and_code === \"Undefined\"){\r\n        let city_list = \"\";\r\n        for(let i = 0; i < city_array.length; i++){\r\n            if(city_array[i] === city_array[city_array.length-1]){\r\n                city_list += city_array[i]+\".\"\r\n            }else{\r\n                city_list += city_array[i]+\", \"\r\n            }\r\n        }\r\n        alert(\"In free trial you may use only this list of cities: \"+city_list);\r\n        document.getElementById('city').focus();\r\n        return false;\r\n    }else{\r\n        // return city_and_code;\r\n        return city_and_code;\r\n    }\r\n}\r\n\r\n// function handleCityRedirect(city){\r\n//     this.props.history.push(`/geo/${city}`);\r\n// }\r\n//\r\n// Index.propTypes = {\r\n//     history: PropTypes.object.isRequired\r\n// };\r\n\r\nexport default Index;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {connect} from \"react-redux\";\r\nimport {getCity} from \"../../actions/weatherActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Content from '../layout/Content';\r\nimport Loader from '../layout/Loader';\r\n\r\n// let city = '';\r\n\r\nclass GetCity extends Component {\r\n    state = {\r\n        units_state: true,\r\n        location: \"\"\r\n    };\r\n\r\n    onChangeUnits = () => {\r\n        // console.log(\"clicked: \"+!this.state.units_state);\r\n        this.setState({units_state: !this.state.units_state})\r\n    };\r\n\r\n    componentDidMount(){\r\n        const { city } = this.props.match.params;\r\n        this.setState({location: city});\r\n        let units = getUnits(this.state.units_state);\r\n\r\n        this.props.getCity(city, units);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState){\r\n        if(prevState.units_state !== this.state.units_state){\r\n            let units = getUnits(this.state.units_state);\r\n            // console.log(units);\r\n\r\n            const { city } = this.props.match.params;\r\n            this.props.getCity(city, units);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const list = this.props.c_data.list;\r\n        const city = this.state.location;\r\n        if(list){\r\n            return (\r\n                <div  className=\"main-container\">\r\n\r\n                    <div className=\"main-header\">\r\n                        <h1>\r\n                            <Link to=\"/\" className=\"back-route\">\r\n                                <i className=\"fas fa-arrow-left\"/>\r\n                                {\" \"}\r\n                            </Link>\r\n                            <span>\r\n                                {getCityName(city)}\r\n                            </span>\r\n                        </h1>\r\n\r\n                        <div className=\"onoffswitch wrapper-ios\">\r\n                            <input type=\"checkbox\" name=\"onoffswitch\" className=\"onoffswitch-checkbox\"\r\n                                   id=\"myonoffswitch\" defaultChecked={this.state.units_state} onChange={this.onChangeUnits} />\r\n                                <label className=\"onoffswitch-label\" htmlFor=\"myonoffswitch\">\r\n                                    <span className=\"onoffswitch-inner\"></span>\r\n                                    <span className=\"onoffswitch-switch\"></span>\r\n                                </label>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Content\r\n                        units = {getUnits(this.state.units_state)}\r\n                        data = {list}\r\n                    />\r\n                </div>\r\n            );\r\n        }else{\r\n            return <Loader/>\r\n        }\r\n    }\r\n}\r\n\r\nfunction getCityName(city){\r\n    return city.substring(0, city.indexOf(\",\"));\r\n}\r\n\r\nfunction getUnits(bool){\r\n    if(bool){\r\n        return \"metric\"\r\n    }else{\r\n        return \"imperial\";\r\n    }\r\n}\r\n\r\nGetCity.propTypes = {\r\n    // c_data: PropTypes.array.isRequired,\r\n    getCity: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect((state) => {return {c_data: state.weather.c_data}},{getCity})(GetCity);\r\n// export default GetCity;","import React, { Component } from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nimport GetGeo from './components/geo/GetGeo';\nimport Index from './components/Index';\nimport GetCity from './components/city/GetCity'\n\nclass App extends Component {\n\n  render() {\n    return (\n        <Provider store={store}>\n            <HashRouter>\n                <div className=\"body-container\">\n                    <Switch>\n                        <Route exact path=\"/\" component={Index}/>\n                        <Route exact path=\"/geo\" component={GetGeo}/>\n                        <Route exact path=\"/city/:city\" component={GetCity}/>\n                    </Switch>\n                </div>\n            </HashRouter>\n        </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}