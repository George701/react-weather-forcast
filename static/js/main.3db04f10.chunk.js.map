{"version":3,"sources":["components/layout/loader.gif","reducers/weatherReducer.js","reducers/index.js","actions/types.js","store.js","components/layout/Loader.js","components/layout/WeatherUnit.js","components/geo/GetLocal.js","actions/weatherActions.js","components/layout/Navigation.js","components/layout/Footer.js","components/geo/GetGeo.js","components/Index.js","components/city/GetCity.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","initialState","c_data","l_data","combineReducers","weather","state","arguments","length","undefined","action","type","Object","objectSpread","payload","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","window","__REDUX_DEVTOOLS_EXTENSION__","Loader","react_default","a","createElement","src","loader","alt","className","getDegreseUnit","unit","dnIcon","time","WeatherUnit","this","props","units","dt","dt_txt","date","String","substring","indexOf","now_date","Date","d","month","getMonth","day","getDate","year","getFullYear","join","formatDate","main","console","log","key","dist_default","format","temp","humidity","pressure","wind","speed","s_unit","getSpeedUnit","degrees","result","parseFloat","getWindDirrection","deg","Component","lat","lon","GetLocal","onChange","e","_this","setState","target","value","_this2","setInterval","getGeo","data","list","city","name","country","id","map","w_unit","layout_WeatherUnit","connect","latitude","longtitude","_ref","asyncToGenerator","regenerator_default","mark","_callee","dispatch","details","res","wrap","_context","prev","next","axios","get","concat","sent","stop","_x","Navigation","react_router_dom","to","Footer","href","rel","GetGeo","isGeolocationAvailable","isGeolocationEnabled","coords","longitude","Fragment","layout_Navigation","geo_GetLocal","layout_Footer","geolocated","positionOptions","enableHighAccuracy","userDecisionTimeout","Index","GetCity","location","onChangeCity","onChangeUnits","getCity","cur_city","substr","_ref2","_callee2","_context2","_x2","App","es","react_router","exact","path","component","Boolean","hostname","match","ReactDOM","render","basename","process","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3db04f10.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loader.866cb20b.gif\";","import { GET_BY_GEO } from \"../actions/types\";\r\nimport { GET_BY_CITY } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    c_data:[],\r\n    l_data:[],\r\n};\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_BY_GEO:\r\n            return{\r\n                ...state,\r\n                l_data: action.payload\r\n            };\r\n        case GET_BY_CITY:\r\n            return{\r\n                ...state,\r\n                c_data: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport weatherReducer from './weatherReducer';\r\n\r\nexport default combineReducers({\r\n    weather:  weatherReducer, // important name\r\n});","export const GET_BY_GEO = 'GET_BY_GEO';\r\nexport const GET_BY_CITY = 'GET_BY_CITY';\r\nexport const GET_LOCATION = 'GET_LOCATION';","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(rootReducer, initialState, compose(applyMiddleware(...middleware), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n));\r\n\r\nexport default store;","import React from 'react';\r\nimport loader from './loader.gif';\r\n\r\nexport default () => {\r\n    return(\r\n        <div>\r\n            <img src={loader} alt=\"Loading...\" className=\"loader\"/>\r\n        </div>\r\n    )\r\n}","import React, { Component } from 'react';\r\nimport Moment from 'react-moment';\r\n\r\nclass WeatherUnit extends Component {\r\n    render(){\r\n        const { unit } = this.props;\r\n        const { units } = this.props;\r\n\r\n        let dt = unit.dt_txt;\r\n        let date = String(dt.substring(0, dt.indexOf(\" \")));\r\n        let time = String(dt.substring(dt.indexOf(\" \")+1, dt.length));\r\n        let now_date = new Date();\r\n        now_date = String(formatDate(now_date));\r\n        let weather = unit.weather[0].main;\r\n        console.log(unit);\r\n        if (date === now_date || time === '12:00:00'){\r\n            if(date === now_date){\r\n                return(\r\n                    <div key={unit.dt} className=\"wth-unit now tooltip\">\r\n                        <div className=\"wth-line date-time\">\r\n                        <span>\r\n                            <Moment  format={'DD MMM HH:mm'}>\r\n                                {unit.dt_txt}\r\n                            </Moment>\r\n                        </span>\r\n                        </div>\r\n                        <div className=\"wth-line weather\">\r\n                            {dnIcon(time, weather)}\r\n                        </div>\r\n                        <div className=\"wth-line temperature\">\r\n                        <span>\r\n                            <i className=\"fas fa-temperature-low\"/>\r\n                            {' '}\r\n                        </span>\r\n                            <span>{unit.main.temp}{' '}{getDegreseUnit(units)}</span>\r\n                        </div>\r\n                        <div className=\"tooltip-text\">\r\n                            <div className=\"wth-line\">Humidity: {unit.main.humidity} %</div>\r\n                            <div className=\"wth-line\">Pressure: {unit.main.pressure} mbar</div>\r\n                            <div className=\"wth-line\">Wind Speed: {unit.wind.speed} {getSpeedUnit(units)}</div>\r\n                            <div className=\"wth-line\">Wind Direction: {getWindDirrection(unit.wind.deg)}</div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }else{\r\n                return(\r\n                    <div key={unit.dt} className=\"wth-unit tooltip\">\r\n                        <div className=\"wth-line date-time\">\r\n                        <span>\r\n                            <Moment  format={'DD MMM'}>\r\n                                {unit.dt_txt}\r\n                            </Moment>\r\n                        </span>\r\n                        </div>\r\n                        <div className=\"wth-line weather future-date\">\r\n                            {dnIcon(time, weather)}\r\n                        </div>\r\n                        <div className=\"wth-line temperature\">\r\n                        <span>\r\n                            <i className=\"fas fa-temperature-low\"/>\r\n                            {' '}\r\n                        </span>\r\n                            <span>{unit.main.temp}{' '}{getDegreseUnit(units)}</span>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        }else{\r\n            return \"\";\r\n        }\r\n    }\r\n}\r\n\r\nfunction getDegreseUnit(unit){\r\n    let d_unit = '';\r\n\r\n    if(unit === 'metric'){\r\n        d_unit = \"°C\";\r\n    }else{\r\n        d_unit = \"°F\";\r\n    }\r\n\r\n    return d_unit;\r\n}\r\n\r\nfunction getSpeedUnit(unit){\r\n    let s_unit = '';\r\n\r\n    if(unit === 'metric'){\r\n        s_unit = \"meter/second\";\r\n    }else{\r\n        s_unit = \"miles/hour\";\r\n    }\r\n\r\n    return s_unit;\r\n}\r\n\r\nfunction getWindDirrection(degrees){\r\n    let result = \"\";\r\n    degrees = parseFloat(degrees);\r\n    if(degrees > 25 && degrees < 75){\r\n        result = \"North-East\";\r\n    }else if(degrees > 75 && degrees < 115){\r\n        result = \"East\";\r\n    }else if(degrees > 115 && degrees < 158){\r\n        result = \"South-East\";\r\n    }else if(degrees > 158 && degrees < 205){\r\n        result = \"South\";\r\n    }else if(degrees > 205 && degrees < 255){\r\n        result = \"South-West\";\r\n    }else if(degrees > 255 && degrees < 298){\r\n        result = \"West\";\r\n    }else if(degrees > 298 && degrees < 325){\r\n        result = \"North-West\";\r\n    }else{\r\n        result = \"North\";\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction formatDate(date) {\r\n    let d = new Date(date),\r\n        month = '' + (d.getMonth() + 1),\r\n        day = '' + d.getDate(),\r\n        year = d.getFullYear();\r\n\r\n    if (month.length < 2) month = '0' + month;\r\n    if (day.length < 2) day = '0' + day;\r\n\r\n    return [year, month, day].join('-');\r\n}\r\n\r\nfunction dnIcon(time, weather){\r\n    if (time === '09:00:00' || time === '12:00:00' || time === '15:00:00' || time === '18:00:00'){\r\n        if(weather === 'Clouds'){\r\n            return <i className=\"fas fa-cloud-sun sun\"/>;\r\n        }else if(weather === 'Rain'){\r\n            return <i className=\"fas fa-cloud-sun-rain sun\"/>;\r\n        }else{\r\n            return <i className=\"fas fa-sun sun\"/>;\r\n        }\r\n\r\n    }else{\r\n        if(weather === 'Clouds'){\r\n            return <i className=\"fas fa-cloud-moon moon\"/>;\r\n        }else if(weather === 'Rain'){\r\n            return <i className=\"fas fa-cloud-moon-rain moon\"/>;\r\n        }else{\r\n            return <i className=\"fas fa-moon moon\"/>;\r\n        }\r\n    }\r\n}\r\n\r\nexport default WeatherUnit;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {getCity, getGeo} from '../../actions/weatherActions';\r\n\r\nimport Loader from '../layout/Loader';\r\nimport WeatherUnit from \"../layout/WeatherUnit\";\r\n\r\nlet units = '';\r\nlet lat = \"\";\r\nlet lon = \"\";\r\n\r\nclass GetLocal extends Component {\r\n    state={\r\n        units: \"metric\"\r\n    };\r\n\r\n    onChange = e => this.setState({units: e.target.value});\r\n\r\n    componentDidMount(){\r\n        setInterval(() => {\r\n           if(units !== this.state.units){\r\n               // try let\r\n               lat = this.props.lat;\r\n               lon = this.props.lon;\r\n               units = this.state.units;\r\n\r\n               console.log(\"Updating...\");\r\n\r\n               this.props.getGeo(lat,lon, units);\r\n           }\r\n        }, 1000);\r\n    }\r\n\r\n    render() {\r\n        const data = this.props.l_data;\r\n        console.log(data);\r\n        if(data){\r\n           const list = data.list;\r\n            if(list){\r\n                return(\r\n                    <div>\r\n                        <div className=\"city-credentials\">\r\n                            <h1>City: <strong>{data.city.name}</strong>, Country: {data.city.country}</h1>\r\n                            <div>\r\n                                <select name=\"units\" id=\"units\" onChange={this.onChange}>\r\n                                    <option value=\"metric\">Celsius</option>\r\n                                    <option value=\"imperial\">Fahrenheit</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"wth-block\">\r\n                            {list.map(w_unit =>\r\n                                <WeatherUnit\r\n                                    key={w_unit.dt}\r\n                                    unit={w_unit}\r\n                                    units={units}\r\n                                />\r\n                             )}\r\n                        </div>\r\n\r\n                    </div>)\r\n            }else{\r\n                return <Loader/>\r\n            }\r\n        }else{\r\n            return <Loader/>\r\n        }\r\n\r\n    }\r\n}\r\n\r\nGetLocal.propTypes = {\r\n    // data: PropTypes.array.isRequired,\r\n    getGeo: PropTypes.func.isRequired,\r\n};\r\n\r\n// const mapStateToProps = (state) => ({\r\n//     l_data: state.weather.l_data,\r\n// });\r\n\r\n// export default connect(mapStateToProps, {getGeo})(GetLocal);\r\nexport default connect((state) => {return {l_data: state.weather.l_data,}},{getGeo})(GetLocal);","import {GET_BY_GEO, GET_BY_CITY} from './types';\r\nimport axios from 'axios';\r\n\r\nexport const getGeo = (latitude, longtitude, units) => async dispatch => {\r\n    const lat = latitude;\r\n    const lon = longtitude;\r\n    const details = units;\r\n    // const details = \"imperial\";\r\n\r\n    const APPID = \"8fe3c472a676c5b382b004b1bfcaec99\";\r\n\r\n\r\n    const res = await axios.get(`https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&units=${details}&APPID=${APPID}`);\r\n    dispatch({\r\n        type: GET_BY_GEO,\r\n        payload: res.data\r\n    })\r\n};\r\n\r\nexport const getCity = (location, units) => async dispatch => {\r\n\r\n    // const city = \"London,uk\";\r\n    const city = location;\r\n    const details = units;\r\n\r\n    // console.log();\r\n\r\n    const APPID = \"8fe3c472a676c5b382b004b1bfcaec99\";\r\n\r\n\r\n    const res = await axios.get(`https://api.openweathermap.org/data/2.5/forecast?q=${city}&units=${details}&APPID=${APPID}`);\r\n    dispatch({\r\n        type: GET_BY_CITY,\r\n        payload: res.data\r\n    })\r\n};\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Navigation extends Component {\r\n    render(){\r\n        return(\r\n            <ul className=\"nav-main\">\r\n                <li className=\"nav-item\">\r\n                    <Link to=\"/\" className=\"nav-link\">\r\n                        <i className=\"fas fa-home\"/>\r\n                    </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link to=\"/city\" className=\"nav-link\">\r\n                        City{' '}\r\n                        <i className=\"fas fa-city\"/>\r\n                    </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link to=\"/geo\" className=\"nav-link\">\r\n                        Geo Location{' '}\r\n                        <i className=\"fas fa-globe-europe\"/>\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navigation;","import React, { Component } from 'react';\r\n\r\nclass Footer extends Component {\r\n    render(){\r\n        return(\r\n            <footer>\r\n                <div className=\"copyright\">\r\n                    <span>\r\n                        &copy; 2019 - George Chernikov\r\n                    </span>\r\n                </div>\r\n                <div className=\"social\">\r\n                    <a href=\"https://github.com/George701\" className=\"github\" target=\"_blank\" rel=\"noopener noreferrer\" >\r\n                        <i className=\"fab fa-github\"/>\r\n                    </a>\r\n                    <a href=\"https://www.linkedin.com/in/georgii-chernikov-04940113b/\" className=\"linked\" target=\"_blank\" rel=\"noopener noreferrer\" >\r\n                        <i className=\"fab fa-linkedin\"/>\r\n                    </a>\r\n                </div>\r\n            </footer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport {geolocated} from 'react-geolocated';\r\n\r\nimport GetLocal from './GetLocal';\r\n\r\nimport Loader from '../layout/Loader';\r\nimport Navigation from '../layout/Navigation';\r\nimport Footer from '../layout/Footer';\r\n\r\nclass GetGeo extends Component {\r\n    // state={\r\n    //     units: \"metric\"\r\n    // };\r\n\r\n    // onChange = e => this.setState({units: e.target.value});\r\n\r\n    render() {\r\n        if(!this.props.isGeolocationAvailable){\r\n            return <div>Your browser does not support Geolocation</div>\r\n        }else{\r\n            if(!this.props.isGeolocationEnabled){\r\n                return <div>Geolocation is not enabled</div>\r\n            }else {\r\n                if (this.props.coords) {\r\n                    const lat = parseFloat(this.props.coords.latitude);\r\n                    const lon = parseFloat(this.props.coords.longitude);\r\n                    // const units = this.state.units;\r\n                    // console.log(units);\r\n                    return (\r\n                        <React.Fragment>\r\n                            <Navigation/>\r\n                            {/*<select name=\"units\" id=\"units\" onChange={this.onChange}>*/}\r\n                                {/*<option value=\"metric\">Celsius</option>*/}\r\n                                {/*<option value=\"imperial\">Fahrenheit</option>*/}\r\n                            {/*</select>*/}\r\n                            <GetLocal\r\n                                lat={lat}\r\n                                lon={lon}\r\n                                // units={units}\r\n                            />\r\n                            <Footer/>\r\n                        </React.Fragment>\r\n                    )\r\n                } else {\r\n                    return <Loader/>;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default geolocated({\r\n    positionOptions: {\r\n        enableHighAccuracy: false,\r\n    },\r\n    userDecisionTimeout: 5000,\r\n})(GetGeo);\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Index extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"index-container\">\r\n                <div className=\"index-header\">\r\n                    <h1>Weather Application</h1>\r\n                    <h2>Choose a method</h2>\r\n                </div>\r\n                <div className=\"index-list\">\r\n                    <Link to=\"/city\" className=\"index-item\">\r\n                        <span>Chose city{' '}</span>\r\n                        <i className=\"fas fa-map-marked-alt\"/>\r\n                    </Link>\r\n                    <Link to=\"/geo\" className=\"index-item\">\r\n                        <span>My location{' '}</span>\r\n                        <i className=\"fas fa-map-signs\"/>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Index;","import React, { Component } from 'react';\r\n\r\nimport {connect} from \"react-redux\";\r\nimport {getCity} from \"../../actions/weatherActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\n\r\nimport Loader from '../layout/Loader';\r\nimport Navigation from '../layout/Navigation';\r\nimport Footer from '../layout/Footer';\r\nimport WeatherUnit from \"../layout/WeatherUnit\";\r\n\r\nlet units = '';\r\nlet city = '';\r\n\r\nclass GetCity extends Component {\r\n    state = {\r\n        location: \"London,uk\",\r\n        units: \"metric\"\r\n    };\r\n\r\n    onChangeCity = e => this.setState({location: e.target.value});\r\n    onChangeUnits = e => this.setState({units: e.target.value});\r\n\r\n    componentDidMount(){\r\n        setInterval(() => {\r\n            if(units !== this.state.units || city !== this.state.location){\r\n                city = this.state.location;\r\n                units = this.state.units;\r\n\r\n                console.log(\"Updating...\");\r\n\r\n                this.props.getCity(city, units);\r\n            }\r\n        }, 1000);\r\n    }\r\n\r\n    render() {\r\n        const city = this.state.location;\r\n        const list = this.props.c_data.list;\r\n\r\n        let cur_city = city.substr(0, city.indexOf(\",\"));\r\n        if(list){\r\n            return (\r\n                <div>\r\n                    <Navigation/>\r\n                    <div className=\"city-credentials\">\r\n                        <h1>City: {cur_city}</h1>\r\n                        <div>\r\n                            <select name=\"city\" id=\"chose_city\" onChange={this.onChangeCity}>\r\n                                <option value=\"London,uk\">London</option>\r\n                                <option value=\"Tallinn,est\">Tallinn</option>\r\n                                <option value=\"Helsinki,fi\">Helsinki</option>\r\n                            </select>\r\n                            <select name=\"units\" id=\"units\" onChange={this.onChangeUnits}>\r\n                                <option value=\"metric\">Celsius</option>\r\n                                <option value=\"imperial\">Fahrenheit</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"wth-block\">\r\n                        {list.map(w_unit =>\r\n                            <WeatherUnit\r\n                                key={w_unit.dt}\r\n                                unit={w_unit}\r\n                                units={units}\r\n                            />\r\n                        )}\r\n                    </div>\r\n                    <Footer/>\r\n                </div>\r\n            );\r\n        }else{\r\n            return <Loader/>\r\n        }\r\n    }\r\n}\r\n\r\n// export default GetCity;\r\nGetCity.propTypes = {\r\n    // data: PropTypes.array.isRequired,\r\n    getCity: PropTypes.func.isRequired,\r\n};\r\n\r\n// const mapStateToProps = (state) => ({\r\n//     c_data: state.weather.c_data,\r\n// });\r\n\r\n\r\n\r\n// export default connect(mapStateToProps, {getCity})(GetCity);\r\nexport default connect((state) => {return {c_data: state.weather.c_data}},{getCity})(GetCity);","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nimport GetGeo from './components/geo/GetGeo';\nimport Index from './components/Index';\nimport GetCity from './components/city/GetCity'\n\nclass App extends Component {\n\n  render() {\n      console.log(\"Testiculs: \"+ process.env.PUBLIC_URL);\n    return (\n        <Provider store={store}>\n            {/*<BrowserRouter basename={process.env.PUBLIC_URL}>*/}\n            <BrowserRouter>\n                <div className=\"body-container\">\n                    <Switch>\n                        <Route exact path=\"/\" component={Index}/>\n                        <Route exact path=\"/geo\" component={GetGeo}/>\n                        <Route exact path=\"/city\" component={GetCity}/>\n                    </Switch>\n                </div>\n            </BrowserRouter>\n        </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(<Router basename={process.env.PUBLIC_URL}> <App /> </Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}