{"version":3,"sources":["components/layout/loader.gif","reducers/weatherReducer.js","reducers/index.js","actions/types.js","store.js","components/layout/Loader.js","components/layout/WeatherUnit.js","components/layout/Navigation.js","components/layout/Footer.js","components/geo/GetLocal.js","actions/weatherActions.js","components/geo/GetGeo.js","components/Index.js","components/city/GetCity.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","initialState","c_data","l_data","combineReducers","weather","state","arguments","length","undefined","action","type","Object","objectSpread","payload","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","window","__REDUX_DEVTOOLS_EXTENSION__","Loader","react_default","a","createElement","Fragment","src","loader","alt","className","getDegreseUnit","unit","dnIcon","time","WeatherUnit","this","props","units","dt","dt_txt","date","String","substring","indexOf","now_date","Date","d","month","getMonth","day","getDate","year","getFullYear","join","formatDate","main","key","dist_default","format","temp","humidity","pressure","wind","speed","s_unit","getSpeedUnit","degrees","result","parseFloat","getWindDirrection","deg","Component","Navigation","react_router_dom","to","Footer","href","target","rel","lat","lon","GetLocal","onChange","e","_this","setState","value","getGeo","prevState","console","log","data","list","layout_Navigation","city","name","country","id","map","w_unit","layout_WeatherUnit","layout_Footer","connect","latitude","longtitude","_ref","asyncToGenerator","regenerator_default","mark","_callee","dispatch","details","res","wrap","_context","prev","next","axios","get","concat","sent","stop","_x","GetGeo","isGeolocationAvailable","isGeolocationEnabled","coords","longitude","geo_GetLocal","geolocated","positionOptions","enableHighAccuracy","userDecisionTimeout","Index","GetCity","location","onChangeCity","onChangeUnits","getCity","cur_city","substr","_ref2","_callee2","_context2","_x2","App","es","react_router","exact","path","component","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.98da8ccf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loader.866cb20b.gif\";","import { GET_BY_GEO } from \"../actions/types\";\r\nimport { GET_BY_CITY } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    c_data:[],\r\n    l_data:[],\r\n};\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_BY_GEO:\r\n            return{\r\n                ...state,\r\n                l_data: action.payload\r\n            };\r\n        case GET_BY_CITY:\r\n            return{\r\n                ...state,\r\n                c_data: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport weatherReducer from './weatherReducer';\r\n\r\nexport default combineReducers({\r\n    weather:  weatherReducer, // important name\r\n});","export const GET_BY_GEO = 'GET_BY_GEO';\r\nexport const GET_BY_CITY = 'GET_BY_CITY';\r\nexport const GET_LOCATION = 'GET_LOCATION';","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(rootReducer, initialState, compose(applyMiddleware(...middleware), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n));\r\n\r\nexport default store;","import React from 'react';\r\nimport loader from './loader.gif';\r\n\r\nexport default () => {\r\n    return(\r\n        <React.Fragment>\r\n            <img src={loader} alt=\"Loading...\" className=\"loader\"/>\r\n        </React.Fragment>\r\n    )\r\n}","import React, { Component } from 'react';\r\nimport Moment from 'react-moment';\r\n\r\nclass WeatherUnit extends Component {\r\n    render(){\r\n        const { unit } = this.props;\r\n        const { units } = this.props;\r\n\r\n        let dt = unit.dt_txt;\r\n        let date = String(dt.substring(0, dt.indexOf(\" \")));\r\n        let time = String(dt.substring(dt.indexOf(\" \")+1, dt.length));\r\n        let now_date = new Date();\r\n        now_date = String(formatDate(now_date));\r\n        let weather = unit.weather[0].main;\r\n\r\n        if (date === now_date || time === '12:00:00'){\r\n            if(date === now_date){\r\n                return(\r\n                    <div key={unit.dt} className=\"wth-unit now tooltip\">\r\n                        <div className=\"wth-line date-time\">\r\n                        <span>\r\n                            <Moment  format={'DD MMM HH:mm'}>\r\n                                {unit.dt_txt}\r\n                            </Moment>\r\n                        </span>\r\n                        </div>\r\n                        <div className=\"wth-line weather\">\r\n                            {dnIcon(time, weather)}\r\n                        </div>\r\n                        <div className=\"wth-line temperature\">\r\n                        <span>\r\n                            <i className=\"fas fa-temperature-low\"/>\r\n                            {' '}\r\n                        </span>\r\n                            <span>{unit.main.temp}{' '}{getDegreseUnit(units)}</span>\r\n                        </div>\r\n                        <div className=\"tooltip-text\">\r\n                            <div className=\"wth-line\">Humidity: {unit.main.humidity} %</div>\r\n                            <div className=\"wth-line\">Pressure: {unit.main.pressure} mbar</div>\r\n                            <div className=\"wth-line\">Wind Speed: {unit.wind.speed} {getSpeedUnit(units)}</div>\r\n                            <div className=\"wth-line\">Wind Direction: {getWindDirrection(unit.wind.deg)}</div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }else{\r\n                return(\r\n                    <div key={unit.dt} className=\"wth-unit tooltip\">\r\n                        <div className=\"wth-line date-time\">\r\n                        <span>\r\n                            <Moment  format={'DD MMM'}>\r\n                                {unit.dt_txt}\r\n                            </Moment>\r\n                        </span>\r\n                        </div>\r\n                        <div className=\"wth-line weather future-date\">\r\n                            {dnIcon(time, weather)}\r\n                        </div>\r\n                        <div className=\"wth-line temperature\">\r\n                        <span>\r\n                            <i className=\"fas fa-temperature-low\"/>\r\n                            {' '}\r\n                        </span>\r\n                            <span>{unit.main.temp}{' '}{getDegreseUnit(units)}</span>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        }else{\r\n            return \"\";\r\n        }\r\n    }\r\n}\r\n\r\nfunction getDegreseUnit(unit){\r\n    let d_unit = '';\r\n\r\n    if(unit === 'metric'){\r\n        d_unit = \"°C\";\r\n    }else{\r\n        d_unit = \"°F\";\r\n    }\r\n\r\n    return d_unit;\r\n}\r\n\r\nfunction getSpeedUnit(unit){\r\n    let s_unit = '';\r\n\r\n    if(unit === 'metric'){\r\n        s_unit = \"meter/second\";\r\n    }else{\r\n        s_unit = \"miles/hour\";\r\n    }\r\n\r\n    return s_unit;\r\n}\r\n\r\nfunction getWindDirrection(degrees){\r\n    let result = \"\";\r\n    degrees = parseFloat(degrees);\r\n    if(degrees > 25 && degrees < 75){\r\n        result = \"North-East\";\r\n    }else if(degrees > 75 && degrees < 115){\r\n        result = \"East\";\r\n    }else if(degrees > 115 && degrees < 158){\r\n        result = \"South-East\";\r\n    }else if(degrees > 158 && degrees < 205){\r\n        result = \"South\";\r\n    }else if(degrees > 205 && degrees < 255){\r\n        result = \"South-West\";\r\n    }else if(degrees > 255 && degrees < 298){\r\n        result = \"West\";\r\n    }else if(degrees > 298 && degrees < 325){\r\n        result = \"North-West\";\r\n    }else{\r\n        result = \"North\";\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction formatDate(date) {\r\n    let d = new Date(date),\r\n        month = '' + (d.getMonth() + 1),\r\n        day = '' + d.getDate(),\r\n        year = d.getFullYear();\r\n\r\n    if (month.length < 2) month = '0' + month;\r\n    if (day.length < 2) day = '0' + day;\r\n\r\n    return [year, month, day].join('-');\r\n}\r\n\r\nfunction dnIcon(time, weather){\r\n    if (time === '09:00:00' || time === '12:00:00' || time === '15:00:00' || time === '18:00:00'){\r\n        if(weather === 'Clouds'){\r\n            return <i className=\"fas fa-cloud-sun sun\"/>;\r\n        }else if(weather === 'Rain'){\r\n            return <i className=\"fas fa-cloud-sun-rain sun\"/>;\r\n        }else{\r\n            return <i className=\"fas fa-sun sun\"/>;\r\n        }\r\n\r\n    }else{\r\n        if(weather === 'Clouds'){\r\n            return <i className=\"fas fa-cloud-moon moon\"/>;\r\n        }else if(weather === 'Rain'){\r\n            return <i className=\"fas fa-cloud-moon-rain moon\"/>;\r\n        }else{\r\n            return <i className=\"fas fa-moon moon\"/>;\r\n        }\r\n    }\r\n}\r\n\r\nexport default WeatherUnit;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Navigation extends Component {\r\n    render(){\r\n        return(\r\n            <ul className=\"nav-main\">\r\n                <li className=\"nav-item\">\r\n                    <Link to=\"/\" className=\"nav-link\">\r\n                        <i className=\"fas fa-home\"/>\r\n                    </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link to=\"/city\" className=\"nav-link\">\r\n                        City{' '}\r\n                        <i className=\"fas fa-city\"/>\r\n                    </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link to=\"/geo\" className=\"nav-link\">\r\n                        Geo Location{' '}\r\n                        <i className=\"fas fa-globe-europe\"/>\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navigation;","import React, { Component } from 'react';\r\n\r\nclass Footer extends Component {\r\n    render(){\r\n        return(\r\n            <footer>\r\n                <div className=\"copyright\">\r\n                    <span>\r\n                        &copy; 2019 - George Chernikov\r\n                    </span>\r\n                </div>\r\n                <div className=\"social\">\r\n                    <a href=\"https://github.com/George701\" className=\"github\" target=\"_blank\" rel=\"noopener noreferrer\" >\r\n                        <i className=\"fab fa-github\"/>\r\n                    </a>\r\n                    <a href=\"https://www.linkedin.com/in/georgii-chernikov-04940113b/\" className=\"linked\" target=\"_blank\" rel=\"noopener noreferrer\" >\r\n                        <i className=\"fab fa-linkedin\"/>\r\n                    </a>\r\n                </div>\r\n            </footer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {getGeo} from '../../actions/weatherActions';\r\n\r\nimport Loader from '../layout/Loader';\r\nimport WeatherUnit from \"../layout/WeatherUnit\";\r\nimport Navigation from '../layout/Navigation';\r\nimport Footer from '../layout/Footer';\r\n\r\nlet units = '';\r\nlet lat = '';\r\nlet lon = '';\r\n\r\nclass GetLocal extends Component {\r\n    state={\r\n        units: \"metric\"\r\n    };\r\n\r\n    onChange = e => this.setState({units: e.target.value});\r\n\r\n    componentDidMount(){\r\n        lat = this.props.lat;\r\n        lon = this.props.lon;\r\n        units = this.state.units;\r\n\r\n        this.props.getGeo(lat,lon, units);\r\n    }\r\n\r\n    componentDidUpdate(prevState){\r\n        if(prevState.units !== this.state.units){\r\n            units = this.state.units;\r\n            console.log(\"Updating...\");\r\n            this.props.getGeo(lat,lon, units);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const data = this.props.l_data;\r\n        console.log(data);\r\n        if(data){\r\n            const list = data.list;\r\n            if(list){\r\n                return(\r\n                    <React.Fragment>\r\n                        <Navigation/>\r\n                        <div className=\"city-credentials\">\r\n                            <h1>City: <strong>{data.city.name}</strong>, Country: {data.city.country}</h1>\r\n                            <div>\r\n                                <select name=\"units\" id=\"units\" onChange={this.onChange}>\r\n                                    <option value=\"metric\">Celsius</option>\r\n                                    <option value=\"imperial\">Fahrenheit</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"wth-block\">\r\n                            {list.map(w_unit =>\r\n                                <WeatherUnit\r\n                                    key={w_unit.dt}\r\n                                    unit={w_unit}\r\n                                    units={units}\r\n                                />\r\n                            )}\r\n                        </div>\r\n                        <Footer/>\r\n                    </React.Fragment>)\r\n            }else{\r\n                return <Loader/>\r\n            }\r\n        }else{\r\n            return <Loader/>\r\n        }\r\n\r\n    }\r\n}\r\n\r\nGetLocal.propTypes = {\r\n    // l_data: PropTypes.array.isRequired,\r\n    getGeo: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect((state) => {return {l_data: state.weather.l_data,}},{getGeo})(GetLocal);","import {GET_BY_GEO, GET_BY_CITY} from './types';\r\nimport axios from 'axios';\r\n\r\nexport const getGeo = (latitude, longtitude, units) => async dispatch => {\r\n    const lat = latitude;\r\n    const lon = longtitude;\r\n    const details = units;\r\n    // const details = \"imperial\";\r\n\r\n    const APPID = \"8fe3c472a676c5b382b004b1bfcaec99\";\r\n\r\n\r\n    const res = await axios.get(`https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&units=${details}&APPID=${APPID}`);\r\n    dispatch({\r\n        type: GET_BY_GEO,\r\n        payload: res.data\r\n    })\r\n};\r\n\r\nexport const getCity = (location, units) => async dispatch => {\r\n\r\n    // const city = \"London,uk\";\r\n    const city = location;\r\n    const details = units;\r\n\r\n    // console.log();\r\n\r\n    const APPID = \"8fe3c472a676c5b382b004b1bfcaec99\";\r\n\r\n\r\n    const res = await axios.get(`https://api.openweathermap.org/data/2.5/forecast?q=${city}&units=${details}&APPID=${APPID}`);\r\n    dispatch({\r\n        type: GET_BY_CITY,\r\n        payload: res.data\r\n    })\r\n};\r\n","import React, { Component } from 'react';\r\nimport {geolocated} from 'react-geolocated';\r\n\r\nimport GetLocal from './GetLocal';\r\n\r\nimport Loader from '../layout/Loader';\r\n\r\nclass GetGeo extends Component {\r\n    // state={\r\n    //     units: \"metric\"\r\n    // };\r\n\r\n    // onChange = e => this.setState({units: e.target.value});\r\n\r\n    render() {\r\n        if(!this.props.isGeolocationAvailable){\r\n            return <div>Your browser does not support Geolocation</div>\r\n        }else{\r\n            if(!this.props.isGeolocationEnabled){\r\n                return <div>Geolocation is not enabled</div>\r\n            }else {\r\n                if (this.props.coords) {\r\n                    const lat = parseFloat(this.props.coords.latitude);\r\n                    const lon = parseFloat(this.props.coords.longitude);\r\n                    return (\r\n                        <GetLocal\r\n                            lat={lat}\r\n                            lon={lon}\r\n                        />\r\n                    )\r\n                } else {\r\n                    return <Loader/>;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default geolocated({\r\n    positionOptions: {\r\n        enableHighAccuracy: false,\r\n    },\r\n    userDecisionTimeout: 5000,\r\n})(GetGeo);\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Index extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"index-container\">\r\n                <div className=\"index-header\">\r\n                    <h1>Weather Application</h1>\r\n                    <h2>Choose a method</h2>\r\n                </div>\r\n                <div className=\"index-list\">\r\n                    <Link to=\"/city\" className=\"index-item\">\r\n                        <span>Chose city{' '}</span>\r\n                        <i className=\"fas fa-map-marked-alt\"/>\r\n                    </Link>\r\n                    <Link to=\"/geo\" className=\"index-item\">\r\n                        <span>My location{' '}</span>\r\n                        <i className=\"fas fa-map-signs\"/>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Index;","import React, { Component } from 'react';\r\n\r\nimport {connect} from \"react-redux\";\r\nimport {getCity} from \"../../actions/weatherActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\n\r\nimport Loader from '../layout/Loader';\r\nimport Navigation from '../layout/Navigation';\r\nimport Footer from '../layout/Footer';\r\nimport WeatherUnit from \"../layout/WeatherUnit\";\r\n\r\nlet units = '';\r\nlet city = '';\r\n\r\nclass GetCity extends Component {\r\n    state = {\r\n        location: \"London,uk\",\r\n        units: \"metric\"\r\n    };\r\n\r\n    onChangeCity = e => this.setState({location: e.target.value});\r\n    onChangeUnits = e => this.setState({units: e.target.value});\r\n\r\n    componentDidMount(){\r\n        city = this.state.location;\r\n        units = this.state.units;\r\n\r\n        console.log(\"Updating...\");\r\n\r\n        this.props.getCity(city, units);\r\n    }\r\n\r\n    componentDidUpdate(prevState){\r\n        if(prevState.units !== this.state.units || prevState.city !== this.state.location){\r\n            units = this.state.units;\r\n            city = this.state.location;\r\n            console.log(\"Updating...\");\r\n            this.props.getCity(city, units);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const city = this.state.location;\r\n        const list = this.props.c_data.list;\r\n\r\n        let cur_city = city.substr(0, city.indexOf(\",\"));\r\n        if(list){\r\n            return (\r\n                <div>\r\n                    <Navigation/>\r\n                    <div className=\"city-credentials\">\r\n                        <h1>City: {cur_city}</h1>\r\n                        <div>\r\n                            <select name=\"city\" id=\"chose_city\" onChange={this.onChangeCity}>\r\n                                <option value=\"London,uk\">London</option>\r\n                                <option value=\"Tallinn,est\">Tallinn</option>\r\n                                <option value=\"Helsinki,fi\">Helsinki</option>\r\n                            </select>\r\n                            <select name=\"units\" id=\"units\" onChange={this.onChangeUnits}>\r\n                                <option value=\"metric\">Celsius</option>\r\n                                <option value=\"imperial\">Fahrenheit</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"wth-block\">\r\n                        {list.map(w_unit =>\r\n                            <WeatherUnit\r\n                                key={w_unit.dt}\r\n                                unit={w_unit}\r\n                                units={units}\r\n                            />\r\n                        )}\r\n                    </div>\r\n                    <Footer/>\r\n                </div>\r\n            );\r\n        }else{\r\n            return <Loader/>\r\n        }\r\n    }\r\n}\r\n\r\nGetCity.propTypes = {\r\n    // c_data: PropTypes.array.isRequired,\r\n    getCity: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect((state) => {return {c_data: state.weather.c_data}},{getCity})(GetCity);","import React, { Component } from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nimport GetGeo from './components/geo/GetGeo';\nimport Index from './components/Index';\nimport GetCity from './components/city/GetCity'\n\nclass App extends Component {\n\n  render() {\n    return (\n        <Provider store={store}>\n            <HashRouter>\n                <div className=\"body-container\">\n                    <Switch>\n                        <Route exact path=\"/\" component={Index}/>\n                        <Route exact path=\"/geo\" component={GetGeo}/>\n                        <Route exact path=\"/city\" component={GetCity}/>\n                    </Switch>\n                </div>\n            </HashRouter>\n        </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}